from dotenv import load_dotenv
load_dotenv()

import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage

from config import TELEGRAM_BOT_TOKEN
from states import EventForm
from handlers import (
    cmd_start, add_event_handler, view_events_handler, exit_add_event_mode,
    handle_new_event, handle_view_events, delete_event_handler, handle_delete_event,
    confirm_delete, edit_event_handler, handle_edit_event, confirm_edit
)

# --- –ë–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä ---
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ ---
# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
dp.message.register(cmd_start, Command("start"))

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
dp.message.register(add_event_handler, F.text == "üìÖ –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ")
dp.message.register(view_events_handler, F.text == "üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–±—ã—Ç–∏—è")
dp.message.register(delete_event_handler, F.text == "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ")
dp.message.register(edit_event_handler, F.text == "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
dp.message.register(exit_add_event_mode, EventForm.waiting_for_event, F.text == "‚ùå –í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è")
dp.message.register(handle_new_event, EventForm.waiting_for_event, F.text)
dp.message.register(handle_view_events, EventForm.waiting_for_period, F.text)
dp.message.register(handle_delete_event, EventForm.waiting_for_delete, F.text)
dp.message.register(confirm_delete, EventForm.confirming_delete, F.text)
dp.message.register(handle_edit_event, EventForm.waiting_for_edit, F.text)
dp.message.register(confirm_edit, EventForm.confirming_edit, F.text)

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
